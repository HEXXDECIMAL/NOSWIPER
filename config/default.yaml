# NoSwiper Default Configuration
# This file is embedded at compile time and provides the default rules
# Users can override these with ~/.config/noswiper/config.yaml

# Global exclusions - processes that can access ANY protected file
# IMPORTANT: Every global exclusion MUST have either:
#   - A hardcoded path_pattern OR team_id (for security validation)
#   - Additional restrictions like base and ppid are recommended
# Without path_pattern or team_id, a rule could match any process!
global_exclusions:
  # Apple system processes from /System/* (like mdworker_shared, Safari services, etc.)
  - app_id: "com.apple.*"
    path_pattern: "/System/*"
    ppid: 1

  # Popular backup programs (GUI apps must have ppid=1)
  - base: "syncthing"
    path_pattern: "/usr/local/bin/syncthing"  # Usually installed here
    ppid: 1
  - base: "rsyncd"  # System daemon, no ppid restriction
    path_pattern: "/usr/*bin/rsyncd"
  - base: "rsync"   # Command-line tool, no ppid restriction
    path_pattern: "/usr/*bin/rsync"
  - base: "Time Machine"
    app_id: "com.apple.*"
    path_pattern: "/System/*"  # Apple system app
    ppid: 1
  - base: "backupd"
    app_id: "com.apple.*"
    path_pattern: "/System/*"  # Apple system daemon
    ppid: 1

  # Popular cloud sync services
  - base: "Dropbox"
    team_id: "G7HH3F8CAK"  # Dropbox
    ppid: 1
  - base: "Google Drive"
    team_id: "EQHXZ8M8AV"  # Google
    ppid: 1
  - base: "OneDrive"
    team_id: "UBF8T346G9"  # Microsoft
    ppid: 1
  - base: "Box Sync"
    team_id: "M5N3QRBRRR"  # Box
    ppid: 1

# Files and patterns to protect
#
# Note: File paths are normalized to ~ based on the file owner's home directory.
# This means a pattern like "~/.ssh/id_*" will match:
# - /Users/alice/.ssh/id_rsa (owned by alice)
# - /home/bob/.ssh/id_ed25519 (owned by bob)
# - /root/.ssh/id_ecdsa (owned by root)
# No need to specify multiple patterns for different home directories!
protected_files:
  # SSH Keys
  - id: ssh_keys
    patterns:
      - "~/.ssh/id_*"
      - "~/.ssh/*_key"
    allow:
      # SSH tools from system paths only
      - base: "ssh"
      - base: "ssh-add"
      - base: "ssh-agent"
      - base: "ssh-keygen"
      - base: "scp"
      - base: "sftp"
      - base: "rsync"

      # SSH from Homebrew Cellar (versioned paths)
      - base: "ssh"
        path_pattern: "/opt/homebrew/Cellar/openssh/*/bin/*"

      # Git from standard locations
      - base: "git"
      - base: "git-remote-https"
        path_pattern: "/usr/libexec/git-core/*"

      # Git from Developer Tools
      - base: "git"
        path_pattern: "/Library/Developer/CommandLineTools/usr/bin/*"

      # GitHub CLI
      - base: "gh"

      # GitHub CLI from Homebrew Cellar (versioned paths)
      - base: "gh"
        path_pattern: "/opt/homebrew/Cellar/gh/*/bin/*"

      # Terminal apps with ppid=1 (GUI apps launched by launchd)
      - app_id: "com.apple.Terminal"
        ppid: 1
      - app_id: "com.googlecode.iterm2"
        ppid: 1
      - app_id: "com.microsoft.VSCode"
        ppid: 1
      - team_id: "dev.warp.Warp"
        ppid: 1


  # AWS Credentials
  - id: aws_credentials
    patterns:
      - "~/.aws/credentials"
      - "~/.aws/config"
    allow:
      # AWS CLI from standard locations
      - base: "aws"

      # Terraform by team ID
      - team_id: "D38WU7D763"  # HashiCorp

      # Ansible
      - base: "ansible"
      - base: "ansible-playbook"

      # Packer
      - base: "packer"

      # Python for boto3 - must be from specific locations
      - base: "python"
      - base: "python3"
        path_pattern: "~/.venv/*/bin/*"
      - base: "python3"
        path_pattern: "~/.*env/bin/*"

  # Google Cloud
  - id: gcloud_credentials
    patterns:
      - "~/.config/gcloud/credentials.db"
      - "~/.config/gcloud/access_tokens.db"
    allow:
      # Google Cloud SDK tools
      - base: "gcloud"
      - base: "gsutil"
      - base: "bq"
      - base: "kubectl"

      # Python used by gcloud
      - base: "python"
      - base: "python3"
      - base: "Python"  # macOS Python wrapper
        app_id: "com.apple.python3"

  # Azure
  - id: azure_credentials
    patterns:
      - "~/.azure/accessTokens.json"
    allow:
      - base: "az"
      - base: "azure-cli"
      - team_id: "UBF8T346G9"  # Microsoft (PowerShell)

  # GPG Keys
  - id: gpg_keys
    patterns:
      - "~/.gnupg/private-keys*"
      - "~/.gnupg/secring.gpg"
    allow:
      - base: "gpg"
      - base: "gpg2"
      - base: "gpg-agent"
      - base: "pinentry*"
      - base: "pass"

  # Package Manager Credentials
  - id: npm_credentials
    patterns:
      - "~/.npmrc"
    allow:
      - base: "npm"
      - base: "node"
      - base: "yarn"
      - base: "pnpm"

  - id: python_credentials
    patterns:
      - "~/.pypirc"
    allow:
      - base: "python"
      - base: "python3"
      - base: "pip"
      - base: "pip3"
      - base: "twine"
        path_pattern: "~/.local/bin/*"

  - id: cargo_credentials
    patterns:
      - "~/.cargo/credentials"
    allow:
      - base: "cargo"
        path_pattern: "~/.cargo/bin/*"
      - base: "rustc"
        path_pattern: "~/.cargo/bin/*"
      - base: "rustup"
        path_pattern: "~/.cargo/bin/*"

  - id: docker_credentials
    patterns:
      - "~/.docker/config.json"
    allow:
      - base: "docker"
      - base: "docker-compose"
      - base: "docker-credential-desktop"
      # Docker Desktop
      - team_id: "9BNSXJN65R"  # Docker Inc

  # Kubernetes
  - id: kubernetes_config
    patterns:
      - "~/.kube/config"
    allow:
      - base: "kubectl"
      - base: "helm"
      - base: "k9s"
      - base: "minikube"
      # Lens
      - team_id: "R6H3FQGQ9K"  # Mirantis (Lens)

  # Browser Password Stores - Firefox
  - id: firefox_passwords
    patterns:
      - "~/Library/Application Support/Firefox/Profiles/*/logins.json"
      - "~/Library/Application Support/Firefox/Profiles/*/key*.db"
      - "~/Library/Application Support/Firefox/Profiles/*/cookies.sqlite"
      - "~/.mozilla/firefox/*/logins.json"  # Linux
      - "~/.mozilla/firefox/*/key*.db"  # Linux
      - "~/.mozilla/firefox/*/cookies.sqlite"  # Linux
    allow:
      # Firefox
      - team_id: "43AQ936H96"  # Mozilla
      - base: "com.apple.Safari.BrowserDataImportingService"
        app_id: "com.apple.*"
        path_pattern: "/System/*"
      # Apple system processes (like mdworker_shared for indexing)
      - app_id: "com.apple.*"
        path_pattern: "/System/*"

  # Zen Browser (Firefox-based)
  - id: zen_browser_data
    patterns:
      - "~/Library/Application Support/Zen/Profiles/*/logins.json"
      - "~/Library/Application Support/Zen/Profiles/*/key*.db"
      - "~/Library/Application Support/Zen/Profiles/*/cookies.sqlite"
      - "~/Library/Application Support/Zen/Profiles/*/places.sqlite"
      - "~/Library/Application Support/Zen/Profiles/*/formhistory.sqlite"
      - "~/Library/Application Support/Zen/Profiles/*/signons.sqlite"
    allow:
      - team_id: "9V5K9TP787"  # Zen Browser

  - pattern: "~/Library/Application Support/Zen/Profiles/*/cert*.db"
    allow:
      - base: "zen"
        team_id: "9V5K9TP787"
        ppid: 1
      - base: "Zen"
        team_id: "9V5K9TP787"
        ppid: 1

  # Browser Password Stores - Google Chrome (all variants)
  - id: chrome_passwords
    patterns:
      # Chrome Stable - macOS
      - "~/Library/Application Support/Google/Chrome/*/Login Data"
      - "~/Library/Application Support/Google/Chrome/*/Cookies"
      - "~/Library/Application Support/Google/Chrome/*/Web Data"
      - "~/Library/Application Support/Google/Chrome/*/History"
      - "~/Library/Application Support/Google/Chrome/*/Network/Cookies"
      # Chrome Beta - macOS
      - "~/Library/Application Support/Google/Chrome Beta/*/Login Data"
      - "~/Library/Application Support/Google/Chrome Beta/*/Cookies"
      - "~/Library/Application Support/Google/Chrome Beta/*/Web Data"
      - "~/Library/Application Support/Google/Chrome Beta/*/History"
      - "~/Library/Application Support/Google/Chrome Beta/*/Network/Cookies"
      # Chrome Canary - macOS
      - "~/Library/Application Support/Google/Chrome Canary/*/Login Data"
      - "~/Library/Application Support/Google/Chrome Canary/*/Cookies"
      - "~/Library/Application Support/Google/Chrome Canary/*/Web Data"
      - "~/Library/Application Support/Google/Chrome Canary/*/History"
      - "~/Library/Application Support/Google/Chrome Canary/*/Network/Cookies"
      # Chrome Stable - Linux
      - "~/.config/google-chrome/*/Login Data"
      - "~/.config/google-chrome/*/Cookies"
      - "~/.config/google-chrome/*/Web Data"
      - "~/.config/google-chrome/*/History"
      # Chrome Beta - Linux
      - "~/.config/google-chrome-beta/*/Login Data"
      - "~/.config/google-chrome-beta/*/Cookies"
      - "~/.config/google-chrome-beta/*/Web Data"
      - "~/.config/google-chrome-beta/*/History"
      # Chrome Dev/Canary - Linux (called 'unstable')
      - "~/.config/google-chrome-unstable/*/Login Data"
      - "~/.config/google-chrome-unstable/*/Cookies"
      - "~/.config/google-chrome-unstable/*/Web Data"
      - "~/.config/google-chrome-unstable/*/History"
    allow:
      # Google Chrome (all variants have same team ID)
      - team_id: "EQHXZ8M8AV"  # Google (includes Chrome, Beta, Canary, and all helpers)
      # Linux variants
      - base: "google-chrome"
      - base: "google-chrome-stable"
      - base: "google-chrome-beta"
      - base: "google-chrome-unstable"
      - base: "chrome"

  - id: chromium_passwords
    patterns:
      - "~/Library/Application Support/Chromium/*/Login Data"
      - "~/Library/Application Support/Chromium/*/Cookies"
      - "~/Library/Application Support/Chromium/*/Web Data"
      - "~/.config/chromium/*/Login Data"  # Linux
      - "~/.config/chromium/*/Cookies"  # Linux
      - "~/.config/chromium/*/Web Data"  # Linux
    allow:
      - base: "Chromium"
        ppid: 1

  # Email Clients - macOS Mail
  - id: apple_mail
    patterns:
      - "~/Library/Mail/V*/MailData/Accounts.plist"
      - "~/Library/Mail/V*/MailData/*/MessageData/*"
      - "~/Library/Accounts/Accounts4.sqlite"
      - "~/Library/Containers/com.apple.mail/Data/Library/Mail/*"
    allow:
      - base: "Mail"
        app_id: "com.apple.*"
        ppid: 1
      - base: "MailService"
        app_id: "com.apple.*"
        path_pattern: "/System/*"
      - base: "accountsd"
        app_id: "com.apple.*"
        path_pattern: "/System/*"
      - base: "SecurityAgent"
        app_id: "com.apple.*"
        path_pattern: "/System/*"

  # Microsoft Outlook
  - id: outlook_mail
    patterns:
      - "~/Library/Group Containers/UBF8T346G9.Office/Outlook/Outlook 15 Profiles/Main Profile/Accounts/*"
      - "~/Library/Group Containers/UBF8T346G9.Office/Outlook/Outlook 15 Profiles/Main Profile/*.olk15Message"
    allow:
      - team_id: "UBF8T346G9"  # Microsoft (Outlook)

  # Spark Mail
  - pattern: "~/Library/Containers/com.readdle.smartemail-Mac/Data/Library/Application Support/Spark/Accounts.db"
    allow:
      - team_id: "6Z8N55R3J2"  # Readdle (Spark)

  # Thunderbird
  - id: thunderbird_passwords
    patterns:
      - "~/Library/Thunderbird/Profiles/*/logins.json"
      - "~/Library/Thunderbird/Profiles/*/cookies.sqlite"
      - "~/Library/Thunderbird/Profiles/*/key*.db"
      - "~/.thunderbird/*/logins.json"  # Linux
      - "~/.thunderbird/*/cookies.sqlite"  # Linux
      - "~/.thunderbird/*/key*.db"  # Linux
    allow:
      - team_id: "43AQ936H96"  # Mozilla (Thunderbird)

  # Safari Extensions and Data
  - pattern: "~/Library/Safari/LocalStorage/*"
    allow:
      - base: "Safari"
        app_id: "com.apple.*"
        ppid: 1
      - base: "SafariServices"
        app_id: "com.apple.*"
        path_pattern: "/System/*"

  - pattern: "~/Library/Safari/Databases/*"
    allow:
      - base: "Safari"
        app_id: "com.apple.*"
        ppid: 1
      - base: "SafariServices"
        app_id: "com.apple.*"
        path_pattern: "/System/*"

  # macOS Keychain - Most permissive since many apps need it
  - pattern: "~/Library/Keychains/login.keychain-db"
    allow:
      # Apple system processes
      - app_id: "com.apple.*"

      # Any legitimate app from standard app locations with ppid=1
      - path_pattern: "/Applications/*/*.app/Contents/MacOS/*"
        ppid: 1
      - path_pattern: "/System/Applications/*/*.app/Contents/MacOS/*"
        ppid: 1
      - path_pattern: "~/Applications/*/*.app/Contents/MacOS/*"
        ppid: 1
      - path_pattern: "/Applications/Utilities/*/*.app/Contents/MacOS/*"
        ppid: 1

      # Homebrew Cask apps
      - path_pattern: "/opt/homebrew/Caskroom/*/*.app/Contents/MacOS/*"
        ppid: 1

      # Command-line tools that legitimately need keychain
      - base: "security"
      - base: "codesign"
      # Hardcoded path for Apple's security tool
      - path: "/usr/bin/security"

  - pattern: "~/Library/Keychains/*.keychain-db"
    allow:
      # Apple system processes
      - app_id: "com.apple.*"

      # Security tools
      - base: "security"
      - base: "Keychain Access"
        app_id: "com.apple.*"
        ppid: 1
      # Hardcoded path for Apple's security tool
      - path: "/usr/bin/security"

  # Password Managers
  - pattern: "~/.password-store/**/*.gpg"
    allow:
      - base: "pass"
      - base: "gpg"
      - base: "gpg2"
      - base: "passmenu"

  - pattern: "~/Documents/*.kdbx"
    allow:
      # KeePassXC
      - team_id: "G2S7R7PVXJ"  # KeePassXC
      # Command-line tools
      - base: "kpcli"

  - pattern: "~/Library/Application Support/Bitwarden/data.json"
    allow:
      - team_id: "LTZ2PFU5D6"  # Bitwarden

  # Cryptocurrency Wallets
  - id: crypto_wallets
    patterns:
      - "~/Library/Application Support/Bitcoin/wallet.dat"
      - "~/Library/Application Support/Ethereum/keystore/*"
      - "~/Library/Application Support/Electrum/wallets/*"
      - "~/Library/Application Support/exodus/exodus.wallet/*"
      - "~/Library/Application Support/atomic/Local Storage/leveldb/*"
      - "/Users/*/Library/Application Support/Bitcoin/wallet.dat"
      - "/Users/*/Library/Application Support/Ethereum/keystore/*"
      - "/Users/*/Library/Application Support/Electrum/wallets/*"
      - "/Users/*/Library/Application Support/exodus/exodus.wallet/*"
      - "/Users/*/Library/Application Support/atomic/Local Storage/leveldb/*"
      - "~/.bitcoin/wallet.dat"  # Linux
      - "~/.ethereum/keystore/*"  # Linux
      - "~/.electrum/wallets/*"  # Linux
      - "/home/*/.bitcoin/wallet.dat"
      - "/home/*/.ethereum/keystore/*"
      - "/home/*/.electrum/wallets/*"
    allow:
      - base: "Bitcoin-Qt"
        ppid: 1
      - base: "bitcoin-cli"
      - base: "geth"
      - base: "Mist"
        ppid: 1
      - base: "Electrum"
        ppid: 1
      - base: "Exodus"
        ppid: 1
      - base: "Atomic Wallet"
        ppid: 1

  # Discord Token
  - id: discord_data
    patterns:
      - "~/Library/Application Support/discord/Local Storage/leveldb/*"
      - "/Users/*/Library/Application Support/discord/Local Storage/leveldb/*"
      - "~/.config/discord/Local Storage/leveldb/*"  # Linux
      - "/home/*/.config/discord/Local Storage/leveldb/*"
    allow:
      - team_id: "53Q6R32WPB"  # Discord

  # Slack
  - id: slack_data
    patterns:
      - "~/Library/Application Support/Slack/Cookies"
      - "~/Library/Application Support/Slack/Local Storage/leveldb/*"
      - "/Users/*/Library/Application Support/Slack/Cookies"
      - "/Users/*/Library/Application Support/Slack/Local Storage/leveldb/*"
      - "~/.config/Slack/Cookies"  # Linux
      - "~/.config/Slack/Local Storage/leveldb/*"  # Linux
      - "/home/*/.config/Slack/Cookies"
      - "/home/*/.config/Slack/Local Storage/leveldb/*"
    allow:
      - team_id: "BQR82RAZA8"  # Slack

  # Telegram
  - pattern: "~/Library/Application Support/Telegram Desktop/tdata/*"
    allow:
      - base: "Telegram Desktop"
        ppid: 1
      - base: "Telegram"
        ppid: 1

  # Signal
  - id: signal_data
    patterns:
      - "~/Library/Application Support/Signal/sql/db.sqlite"
      - "~/Library/Application Support/Signal/config.json"
      - "/Users/*/Library/Application Support/Signal/sql/db.sqlite"
      - "/Users/*/Library/Application Support/Signal/config.json"
      - "~/.config/Signal/sql/db.sqlite"  # Linux
      - "~/.config/Signal/config.json"  # Linux
      - "/home/*/.config/Signal/sql/db.sqlite"
      - "/home/*/.config/Signal/config.json"
    allow:
      - team_id: "U68MSDN6DR"  # Signal

  # Brave Browser
  - id: brave_passwords
    patterns:
      - "~/Library/Application Support/BraveSoftware/Brave-Browser/*/Login Data"
      - "~/Library/Application Support/BraveSoftware/Brave-Browser/*/Cookies"
      - "/Users/*/Library/Application Support/BraveSoftware/Brave-Browser/*/Login Data"
      - "/Users/*/Library/Application Support/BraveSoftware/Brave-Browser/*/Cookies"
      - "~/.config/BraveSoftware/Brave-Browser/*/Login Data"  # Linux
      - "~/.config/BraveSoftware/Brave-Browser/*/Cookies"  # Linux
      - "/home/*/.config/BraveSoftware/Brave-Browser/*/Login Data"
      - "/home/*/.config/BraveSoftware/Brave-Browser/*/Cookies"
    allow:
      - team_id: "KL8N8XSYF4"  # Brave

  # Edge Browser
  - id: edge_passwords
    patterns:
      - "~/Library/Application Support/Microsoft Edge/*/Login Data"
      - "~/Library/Application Support/Microsoft Edge/*/Cookies"
      - "/Users/*/Library/Application Support/Microsoft Edge/*/Login Data"
      - "/Users/*/Library/Application Support/Microsoft Edge/*/Cookies"
      - "~/.config/microsoft-edge/*/Login Data"  # Linux
      - "~/.config/microsoft-edge/*/Cookies"  # Linux
      - "/home/*/.config/microsoft-edge/*/Login Data"
      - "/home/*/.config/microsoft-edge/*/Cookies"
    allow:
      - team_id: "UBF8T346G9"  # Microsoft (Edge)

  # Opera Browser
  - id: opera_passwords
    patterns:
      - "~/Library/Application Support/com.operasoftware.Opera/Login Data"
      - "~/Library/Application Support/com.operasoftware.Opera/Cookies"
      - "/Users/*/Library/Application Support/com.operasoftware.Opera/Login Data"
      - "/Users/*/Library/Application Support/com.operasoftware.Opera/Cookies"
      - "~/.config/opera/Login Data"  # Linux
      - "~/.config/opera/Cookies"  # Linux
      - "/home/*/.config/opera/Login Data"
      - "/home/*/.config/opera/Cookies"
    allow:
      - team_id: "A2P9LX4JPN"  # Opera

  # FileZilla
  - id: filezilla_servers
    patterns:
      - "~/.config/filezilla/recentservers.xml"
      - "~/.config/filezilla/sitemanager.xml"
      - "/home/*/.config/filezilla/recentservers.xml"
      - "/home/*/.config/filezilla/sitemanager.xml"
      - "~/Library/Application Support/FileZilla/recentservers.xml"  # macOS
      - "~/Library/Application Support/FileZilla/sitemanager.xml"  # macOS
      - "/Users/*/Library/Application Support/FileZilla/recentservers.xml"
      - "/Users/*/Library/Application Support/FileZilla/sitemanager.xml"
    allow:
      - base: "filezilla"
        ppid: 1
      - base: "FileZilla"
        ppid: 1

  # Authy Desktop
  - pattern: "~/Library/Application Support/Authy Desktop/Local Storage/leveldb/*"
    allow:
      - team_id: "9EVH9FK6WT"  # Twilio (Authy)

  # Steam
  - pattern: "~/Library/Application Support/Steam/config/loginusers.vdf"
    allow:
      - base: "steam"
        ppid: 1
      - team_id: "MXGJJ98X76"  # Valve (Steam)

  # Battle.net
  - pattern: "~/Library/Application Support/Battle.net/Account/*"
    allow:
      - team_id: "L2JLF47G6D"  # Blizzard

  # Notion
  - pattern: "~/Library/Application Support/Notion/notion.db"
    allow:
      - team_id: "LBQJ96R89F"  # Notion

  # TablePlus
  - id: tableplus_connections
    patterns:
      - "~/Library/Application Support/com.tinyapp.TablePlus/Data/Connections.plist"
      - "/Users/*/Library/Application Support/com.tinyapp.TablePlus/Data/Connections.plist"
    allow:
      - team_id: "3X57WD8ENQ"  # TablePlus

  # Sequel Pro
  - id: sequel_pro_connections
    patterns:
      - "~/Library/Application Support/Sequel Pro/Data/Favorites.plist"
      - "/Users/*/Library/Application Support/Sequel Pro/Data/Favorites.plist"
    allow:
      - base: "Sequel Pro"
        ppid: 1

  # DBeaver
  - id: dbeaver_connections
    patterns:
      - "~/.dbeaver/credentials-config.json"
      - "/home/*/.dbeaver/credentials-config.json"
      - "/Users/*/.dbeaver/credentials-config.json"
    allow:
      - base: "dbeaver"
        ppid: 1
      - base: "DBeaver"
        ppid: 1

  # Postman
  - pattern: "~/Library/Application Support/Postman/storage/*"
    allow:
      - team_id: "H7LP8A9S8Q"  # Postman

  # Insomnia
  - pattern: "~/Library/Application Support/Insomnia/insomnia.*.db"
    allow:
      - team_id: "FX44YY62GV"  # Kong (Insomnia)

  # RDP Connection Files
  - pattern: "~/Documents/*.rdp"
    allow:
      - team_id: "UBF8T346G9"  # Microsoft (Remote Desktop)

  # VPN Configurations
  - id: vpn_configs
    patterns:
      - "~/Library/Application Support/Viscosity/OpenVPN/*"
      - "/Users/*/Library/Application Support/Viscosity/OpenVPN/*"
      - "~/Library/Application Support/Tunnelblick/Configurations/*"
      - "/Users/*/Library/Application Support/Tunnelblick/Configurations/*"
    allow:
      - team_id: "34XR7GXFPX"  # SparkLabs (Viscosity)
      - base: "Tunnelblick"
        ppid: 1

  # FTP/SFTP Clients (keep separate - each should only access own bookmarks)
  # Cyberduck
  - id: cyberduck_bookmarks
    patterns:
      - "~/Library/Group Containers/G69SCX94XU.duck/Library/Application Support/duck/Bookmarks/*"
      - "/Users/*/Library/Group Containers/G69SCX94XU.duck/Library/Application Support/duck/Bookmarks/*"
    allow:
      - team_id: "G69SCX94XU"  # iterate (Cyberduck)

  # Transmit
  - id: transmit_favorites
    patterns:
      - "~/Library/Application Support/Transmit/Favorites/*"
      - "/Users/*/Library/Application Support/Transmit/Favorites/*"
    allow:
      - team_id: "VE8FC488U5"  # Panic (Transmit)

  # Git Clients (keep separate - each should only access own credentials)
  # GitHub Desktop
  - id: github_desktop_accounts
    patterns:
      - "~/Library/Application Support/GitHub Desktop/storage/userData.json"
      - "/Users/*/Library/Application Support/GitHub Desktop/storage/userData.json"
    allow:
      - team_id: "VEKTX9H2N7"  # GitHub Desktop

  # SourceTree
  - id: sourcetree_accounts
    patterns:
      - "~/Library/Application Support/SourceTree/accounts.json"
      - "/Users/*/Library/Application Support/SourceTree/accounts.json"
    allow:
      - team_id: "UPXU4CQZ5P"  # Atlassian (SourceTree)

  # GitKraken
  - id: gitkraken_profiles
    patterns:
      - "~/.gitkraken/profiles/*"
      - "/home/*/.gitkraken/profiles/*"
      - "/Users/*/.gitkraken/profiles/*"
    allow:
      - team_id: "HV6GQZR9ZK"  # Axosoft (GitKraken)

  # Shell History Files
  - id: shell_history
    patterns:
      # Bash
      - "~/.bash_history"
      - "/home/*/.bash_history"
      - "/Users/*/.bash_history"
      - "/root/.bash_history"
      # Zsh
      - "~/.zsh_history"
      - "/home/*/.zsh_history"
      - "/Users/*/.zsh_history"
      - "/root/.zsh_history"
      # C shell
      - "~/.history"
      - "/home/*/.history"
      - "/Users/*/.history"
      # Fish
      - "~/.fish_history"
      - "~/.local/share/fish/fish_history"
      - "/home/*/.fish_history"
      - "/home/*/.local/share/fish/fish_history"
      - "/Users/*/.local/share/fish/fish_history"
      # PowerShell
      - "~/.local/share/powershell/PSReadLine/ConsoleHost_history.txt"
      - "/home/*/.local/share/powershell/PSReadLine/ConsoleHost_history.txt"
      - "/Users/*/.local/share/powershell/PSReadLine/ConsoleHost_history.txt"
    allow:
      - base: "bash"
      - base: "sh"
      - base: "zsh"
      - base: "csh"
      - base: "tcsh"
      - base: "fish"
      - base: "pwsh"
      - team_id: "UBF8T346G9"  # Microsoft (PowerShell)
      # Homebrew paths for shells
      - base: "fish"
        path_pattern: "/opt/homebrew/Cellar/fish/*/bin/fish"

  # Environment files
  - id: env_files
    patterns:
      - "~/.env"
      - "~/*/.env"
      - "~/*/.env.*"  # Covers .env.local, .env.production, etc.
      - "/home/*/.env"
      - "/home/*/.env.*"
      - "/Users/*/.env"
      - "/Users/*/.env.*"
      - "/root/.env"
      - "/root/*/.env"
      - "/root/*/.env.*"
    allow:
      # VS Code
      - team_id: "UBF8T346G9"  # Microsoft (VS Code)
      # Command-line editors
      - base: "vim"
      - base: "nvim"
      - base: "emacs"
      - base: "nano"
      # Runtimes that need env vars
      - base: "node"
      - base: "python"
      - base: "python3"
      - base: "ruby"
      - base: "php"
      # Docker
      - base: "docker"
      - base: "docker-compose"

  # GitHub CLI
  - id: github_cli
    patterns:
      - "~/.config/gh/hosts.yml"
      - "/home/*/.config/gh/hosts.yml"
      - "/Users/*/.config/gh/hosts.yml"
      - "/root/.config/gh/hosts.yml"
    allow:
      - base: "gh"
      # GitHub CLI from Homebrew Cellar (versioned paths)
      - base: "gh"
        path_pattern: "/opt/homebrew/Cellar/gh/*/bin/*"

  # Network authentication files
  - id: netrc_files
    patterns:
      - "~/.netrc"
      - "/home/*/.netrc"
      - "/Users/*/.netrc"
      - "/root/.netrc"
    allow:
      # Cloud CLIs
      - base: "heroku"
      # Network tools
      - base: "curl"
      - base: "wget"
      - base: "ftp"
      - base: "git"
      - base: "lftp"
      # Email clients
      - base: "mutt"
      - base: "pine"
      - base: "alpine"
      # Command-line editors (may edit the file)
      - base: "vim"
      - base: "nvim"
      - base: "emacs"
      - base: "nano"

  # Netlify CLI
  - id: netlify_config
    patterns:
      - "~/.netlify/config.json"
      - "/home/*/.netlify/config.json"
      - "/Users/*/.netlify/config.json"
      - "/root/.netlify/config.json"
    allow:
      - base: "netlify"
      - base: "ntl"

  # Vercel CLI
  - pattern: "~/.vercel/auth.json"
    allow:
      - base: "vercel"
      - base: "vc"

  # Linux-specific paths (keeping legacy format for Linux compatibility)
  - pattern: "~/.local/share/keyrings/*.keyring"
    allow:
      - base: "gnome-keyring-daemon"
      - base: "seahorse"
      - base: "secret-tool"


  - pattern: "~/.mozilla/firefox/*/logins.json"
    allow:
      - base: "firefox"
      - base: "firefox-bin"

  - pattern: "~/.mozilla/firefox/*/cookies.sqlite"
    allow:
      - base: "firefox"
      - base: "firefox-bin"

  # Zen Browser on Linux
  - pattern: "~/.zen/*/profiles/*/logins.json"
    allow:
      - base: "zen"
      - base: "zen-browser"

  - pattern: "~/.zen/*/profiles/*/key*.db"
    allow:
      - base: "zen"
      - base: "zen-browser"

  - pattern: "~/.zen/*/profiles/*/cookies.sqlite"
    allow:
      - base: "zen"
      - base: "zen-browser"

  - pattern: "~/.config/zen/*/profiles/*/logins.json"
    allow:
      - base: "zen"
      - base: "zen-browser"

  - pattern: "~/.config/zen/*/profiles/*/key*.db"
    allow:
      - base: "zen"
      - base: "zen-browser"

  - pattern: "~/.config/zen/*/profiles/*/cookies.sqlite"
    allow:
      - base: "zen"
      - base: "zen-browser"

  - pattern: "~/.thunderbird/*/logins.json"
    allow:
      - base: "thunderbird"

  - pattern: "~/.config/discord/Local Storage/leveldb/*"
    allow:
      - base: "discord"
      - base: "Discord"

  - pattern: "~/.config/Slack/Cookies"
    allow:
      - base: "slack"

  - pattern: "~/.config/Code/User/globalStorage/*"
    allow:
      - base: "code"
      - base: "code-oss"

  # Linux server secrets (actual credentials/private keys)
  - pattern: "/etc/shadow"
    allow:
      # System authentication tools
      - base: "passwd"
      - base: "chpasswd"
      - base: "usermod"
      - base: "vipw"
      - base: "pwck"
      # PAM modules
      - team_id: "system"
        uid: 0

  - pattern: "/etc/gshadow"
    allow:
      - base: "gpasswd"
      - base: "vigr"
      - base: "grpck"
      - team_id: "system"
        uid: 0

  - pattern: "/etc/ssh/ssh_host_*_key"
    allow:
      - base: "sshd"
      - base: "ssh-keygen"
      - team_id: "system"
        uid: 0

  - pattern: "/etc/ssl/private/*"
    allow:
      # Web servers
      - base: "nginx"
      - base: "apache2"
      - base: "httpd"
      # Load balancers
      - base: "haproxy"
      # System SSL tools
      - base: "openssl"
      - team_id: "system"
        uid: 0

  - pattern: "/etc/pki/private/*"
    allow:
      - base: "nginx"
      - base: "apache2"
      - base: "httpd"
      - base: "haproxy"
      - base: "openssl"
      - team_id: "system"
        uid: 0

  - pattern: "/root/.ssh/id_*"
    allow:
      - base: "ssh"
      - base: "ssh-add"
      - base: "ssh-agent"
      - base: "ssh-keygen"
      - base: "scp"
      - base: "rsync"
      - uid: 0

  - pattern: "/home/*/.ssh/id_*"
    allow:
      - base: "ssh"
      - base: "ssh-add"
      - base: "ssh-agent"
      - base: "ssh-keygen"
      - base: "scp"
      - base: "rsync"

  - pattern: "/etc/mysql/debian.cnf"
    allow:
      - base: "mysql"
      - base: "mysqld"
      - base: "mariadb"
      - team_id: "system"
        uid: 0

  - pattern: "/var/lib/postgresql/.pgpass"
    allow:
      - base: "postgres"
      - base: "psql"
      - base: "pg_dump"
      - base: "pg_restore"

# Patterns to exclude from monitoring (reduce noise)
excluded_patterns:
  - "*.pub"           # Public keys
  - "*.public"        # Public files
  - "*/.git/*"        # Git internals
  - "*/node_modules/*" # Node modules
  - "*/__pycache__/*" # Python cache
  - "*/target/*"      # Rust/Cargo build
  - "*.log"           # Log files
  - "*.tmp"           # Temporary files

# Platform-specific default paths for base-only rules
default_base_paths:
  macos:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /System/Library
    - /usr/local/bin
    - /usr/local/sbin
    - /opt/homebrew/bin
    - /opt/homebrew/sbin
    - /opt/homebrew/Cellar/*/bin
    - /opt/homebrew/Cellar/*/sbin
    - /nix/store/*/bin  # Nix packages
    - /run/current-system/sw/bin  # NixOS system packages
    - ~/.nix-profile/bin  # User nix packages
    - /Applications/*/Contents/MacOS
    - /Applications/*/*/Contents/MacOS
    - ~/Applications/*/Contents/MacOS
    - /System/Applications/*/Contents/MacOS
    - /System/Volumes/Preboot/Cryptexes/App/System/Applications/*/Contents/XPCServices/*/Contents/MacOS

  linux:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /usr/local/bin
    - /usr/local/sbin
    - /opt/*/bin
    - /snap/bin
    - /var/lib/flatpak/exports/bin
    - ~/.local/bin
    - /nix/store/*/bin  # Nix packages
    - /run/current-system/sw/bin  # NixOS system packages
    - ~/.nix-profile/bin  # User nix packages

  freebsd:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /usr/local/bin
    - /usr/local/sbin
    - /usr/pkg/bin
    - /usr/pkg/sbin
    - /usr/ports/*/work/stage/usr/local/bin
    - ~/.local/bin
    - /usr/home/*/.cargo/bin
    - /usr/home/*/go/bin

  netbsd:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /usr/pkg/bin
    - /usr/pkg/sbin
    - /usr/X11R7/bin
    - ~/.local/bin
    - /home/*/.cargo/bin
    - /home/*/go/bin

  openbsd:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /usr/local/bin
    - /usr/local/sbin
    - /usr/X11R6/bin
    - ~/.local/bin
    - /home/*/.cargo/bin
    - /home/*/go/bin

  illumos:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /opt/local/bin
    - /opt/local/sbin
    - /usr/gnu/bin
    - /opt/ooce/bin
    - ~/.local/bin
    - /export/home/*/.cargo/bin
    - /export/home/*/go/bin

  solaris:
    - /usr/bin
    - /bin
    - /usr/sbin
    - /sbin
    - /opt/csw/bin
    - /opt/csw/sbin
    - /usr/sfw/bin
    - /usr/gnu/bin
    - ~/.local/bin
    - /export/home/*/.cargo/bin
    - /export/home/*/go/bin

# Monitoring configuration
monitoring:
  # Event buffer size
  buffer_size: 8192

  # Maximum events per second (rate limiting)
  max_events_per_sec: 10000

